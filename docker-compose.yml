version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: apriori_db
    environment:
      POSTGRES_DB: apriori_db
      POSTGRES_USER: apriori_user
      POSTGRES_PASSWORD: apriori_secure_password_2024
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - apriori_network

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: apriori_backend
    environment:
      - DATABASE_URL=postgresql://apriori_user:apriori_secure_password_2024@postgres:5432/apriori_db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - ELEVENLABS_WEBHOOK_SECRET=${ELEVENLABS_WEBHOOK_SECRET}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ENVIRONMENT=production
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - apriori_network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: apriori_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:4200/api
      - REACT_APP_ENVIRONMENT=production
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - apriori_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: apriori_nginx
    ports:
      - "4200:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - apriori_network

volumes:
  postgres_data:
    driver: local
  backend_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  apriori_network:
    driver: bridge 